"use strict";(self.webpackChunkfour=self.webpackChunkfour||[]).push([[4614],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return t?i.createElement(h,o(o({ref:n},u),{},{components:t})):i.createElement(h,o({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5865:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return h}});var i=t(7462),a=t(3366),r=(t(7294),t(3905)),o=t(1193),l=t.n(o),s=["components"],p={title:"Expansion"},u=void 0,c={unversionedId:"programming/c/expansion",id:"programming/c/expansion",title:"Expansion",description:"<div",source:"@site/docs/programming/01-c/04-expansion.mdx",sourceDirName:"programming/01-c",slug:"/programming/c/expansion",permalink:"/programming/c/expansion",editUrl:"https://github.com/The-Programming-Foundation/tutorials/edit/4.0/docs/programming/01-c/04-expansion.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Expansion"},sidebar:"tutorialSidebar",previous:{title:"Calculation",permalink:"/programming/c/calculation"},next:{title:"Python",permalink:"/programming/python/"}},d=[{value:"If Else statements",id:"if-else-statements",children:[],level:2},{value:"True False statements",id:"true-false-statements",children:[],level:2},{value:"Increment and Decrement",id:"increment-and-decrement",children:[],level:2},{value:"Loop",id:"loop",children:[{value:"for loop",id:"for-loop",children:[],level:3},{value:"while loop",id:"while-loop",children:[],level:3},{value:"do while loop",id:"do-while-loop",children:[],level:3},{value:"Nested loop",id:"nested-loop",children:[],level:3}],level:2},{value:"Breaking the loop",id:"breaking-the-loop",children:[],level:2},{value:"Switch case",id:"switch-case",children:[],level:2},{value:"Functions",id:"functions",children:[],level:2},{value:"Return types",id:"return-types",children:[{value:"Void function",id:"void-function",children:[],level:3}],level:2},{value:"Quiz",id:"quiz",children:[],level:2}],m={toc:d};function h(e){var n=e.components,t=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(l(),{mdxType:"Draggable"},(0,r.kt)("div",{class:"card-demo",style:{position:"relative",zIndex:5}},(0,r.kt)("div",{class:"card",style:{backgroundColor:"#000000",position:"relative",zIndex:5,height:"auto"}},(0,r.kt)("iframe",{src:"https://peaceful-bohr-249ea0.netlify.app/c.html",width:"100%",height:"180px",background:"black",overflow:"hidden"}),(0,r.kt)("div",{class:"card__body",style:{backgroundColor:"#1d9dff",position:"relative",zIndex:5,width:"-50px",height:"auto"}})))),(0,r.kt)("h2",{id:"if-else-statements"},"If Else statements"),(0,r.kt)("p",null,"If Else statements are conditions. This is how the If else statement works:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"If it's raining\n    take the umbrella\nelse\n    no need to take the umbrella\n")),(0,r.kt)("p",null,"To implement this program using If Else statements:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'// Defining an integer called rain and set the value to 1\nint rain = 1;\n\n/*\nCheck if rain is 1 using the comparison operator ==\nif so, take the umbrella\n*/\nif (rain == 1) {\n    printf("Take the umbrella\\n");\n}\n// else print no need to take the umbrella\nelse {\n    printf("No need to take the umbrella\\n");\n}\n')),(0,r.kt)("h2",{id:"true-false-statements"},"True False statements"),(0,r.kt)("p",null,"In a programming language, ",(0,r.kt)("strong",{parentName:"p"},"1")," and ",(0,r.kt)("strong",{parentName:"p"},"0")," are determined as ",(0,r.kt)("strong",{parentName:"p"},"true")," and ",(0,r.kt)("strong",{parentName:"p"},"false"),". The statement that evaluates itself as ",(0,r.kt)("strong",{parentName:"p"},"1")," is called a ",(0,r.kt)("strong",{parentName:"p"},"true statement")," and ",(0,r.kt)("strong",{parentName:"p"},"0")," is called a ",(0,r.kt)("strong",{parentName:"p"},"false statement"),"."),(0,r.kt)("h2",{id:"increment-and-decrement"},"Increment and Decrement"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The increment sign is ",(0,r.kt)("strong",{parentName:"li"},"++")),(0,r.kt)("li",{parentName:"ul"},"The decrement sign is ",(0,r.kt)("strong",{parentName:"li"},"\u2014"))),(0,r.kt)("h2",{id:"loop"},"Loop"),(0,r.kt)("p",null,"Loop helps us to execute a task repeatedly. Instead of manually writing the same functions, we can write loops to do that for us."),(0,r.kt)("h3",{id:"for-loop"},"for loop"),(0,r.kt)("p",null,"This loop executes a sequence of statements as per the given condition. This is generally used to loop array by specifying its index or length."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n    /*\n    This for loop will print from 1 to 5 vertically using new line /n\n    It will not print 6 because 5 is less than 6 - keep in mind that    we\'re printing i\n    */\n    for (int i = 1; i < 6; i++) {\n        printf("%d\\n", i);\n    }\n    return 0;\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"1\n2\n3\n4\n5\n")),(0,r.kt)("h3",{id:"while-loop"},"while loop"),(0,r.kt)("p",null,"This executes the code until the given condition for the execution is true."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n\n    // We define an integer i and set it to 0\n    int i = 0;\n\n    // We declare a while loop\n    while (i < 10) {\n\n        // We use the print function to print the integer i using %d\n        printf("i is now: %d\\n", i);\n\n        // We use i++ to increment - while the condition (i < 10) is true it increments the value of i by 1\n        i++;\n    }\n    return 0;\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"i is now: 0\ni is now: 1\ni is now: 2\ni is now: 3\ni is now: 4\ni is now: 5\ni is now: 6\ni is now: 7\ni is now: 8\ni is now: 9\n")),(0,r.kt)("h3",{id:"do-while-loop"},"do while loop"),(0,r.kt)("p",null,"It is similar to while loop except that the condition of the execution is at the end."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n\n    // Defining a integer variable and setting it to 0\n    int i = 0;\n\n    // Do loop\n    do {\n        // Prints i using the format specifier %d\n        printf("i is now: %d\\n", i);\n\n        // increment by 1 using ++\n        i++;\n\n      // while condition\n    } while (i < 15);\n\n    return 0;\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"i is now: 0\ni is now: 1\ni is now: 2\ni is now: 3\ni is now: 4\ni is now: 5\ni is now: 6\ni is now: 7\ni is now: 8\ni is now: 9\ni is now: 10\ni is now: 11\ni is now: 12\ni is now: 13\ni is now: 14\n")),(0,r.kt)("h3",{id:"nested-loop"},"Nested loop"),(0,r.kt)("p",null,"Nested loops are loops inside other loops used in large applications and algorithms. This is highly inefficient in some cases since it requires more memory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n\n  // First for loop with integer i\n  for (int i = 0; i < 5; i++) {\n      // Second for loop with integer j inside the first loop\n      for (int j = 5; j < 10; j++) {\n\n          // Printing i and j\n          printf("%d %d\\n", i, j);\n      }\n  }\n\n  return 0;\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"0 5\n0 6\n0 7\n0 8\n0 9\n1 5\n1 6\n1 7\n1 8\n1 9\n2 5\n2 6\n2 7\n2 8\n2 9\n3 5\n3 6\n3 7\n3 8\n3 9\n4 5\n4 6\n4 7\n4 8\n4 9\n")),(0,r.kt)("h2",{id:"breaking-the-loop"},"Breaking the loop"),(0,r.kt)("p",null,"While coding you might encounter the infinite loop. This happens when the loop condition is always true. In these cases, the program keeps running and never terminates. You can break the loop."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Break statement")," - The loop is terminated by using a break; This caused the pointer to move out of the loop and executes the next statement following the loop code."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Continue statement")," - It causes the loop to skip the remainder of its body and immediately retest its condition before reiterating."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Goto statement")," - Transfers control to the labeled statement.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"To avoid infinite looping, ensure that the conditions given for the loop are\nvalidated at some point. This will stop the loop once the condition is false."))),(0,r.kt)("h2",{id:"switch-case"},"Switch case"),(0,r.kt)("p",null,"Switch case is used when you have a single parameter to compare with multiple integral values. It provides a way to compare different parts of code for the given value of expressions. It also can change the control execution. Once the case is executed the further execution is not approved using ",(0,r.kt)("strong",{parentName:"p"},"break;")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("p",null,"Functions are known as building blocks of programs. A large problem can be divided into smaller functions, this makes the code readable. The function contains the programming statements that are closed in braces ",(0,r.kt)("strong",{parentName:"p"},"{}"),". Writing functions in the program have their benefit:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The reuse of the code is easy."),(0,r.kt)("li",{parentName:"ul"},"Each function take only one responsibility and is interdependent"),(0,r.kt)("li",{parentName:"ul"},"Functions are logical, modular and readable to human eyes. Thus makes it easier to maintain the programs further.")),(0,r.kt)("h2",{id:"return-types"},"Return types"),(0,r.kt)("p",null,"You can define different return types when declaring a function."),(0,r.kt)("p",null,"To define a function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\n/*\nDefining a function named number_compare() that returns\nan integer and takes two parameters, first_num and\nsecond_num\n*/\nint number_compare(first_num, second_num) {\n\n  // Writing a if else condition\n\n  // Checking if first_num the same as second_num using the == operator\n  if (first_num == second_num) {\n    printf("They are the same\\n");\n  }\n  // else print they are not the same\n  else {\n    printf("Not the same\\n");\n  }\n\n  // return the integer 0, means success\n  return 0;\n}\n\n// Declaring the main function\nint main() {\n\n  // Defining two integer variables with random numbers\n  int num1 = 2;\n  int num2 = 3;\n\n  // Calling the function and putting num1 and num2 as parameters\n  number_compare(num1, num2);\n\n  return 0;\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Not the same\n")),(0,r.kt)("h3",{id:"void-function"},"Void function"),(0,r.kt)("p",null,"A void function doesn\u2019t return any value. To declare a void function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\n// Defining a void function to add two numbers\n\nvoid add(first_num, second_num) {\n\n  // Adding num1 and num2 and putting the result in an integer called result\n  int result = first_num + second_num;\n\n  // Printing the output\n  printf("%d\\n", result);\n\n}\n\n// Declaring the main function\nint main() {\n\n  // Defining two integer variables with random numbers\n  int num1 = 2;\n  int num2 = 3;\n\n  // Calling the void function and putting num1 and num2 as parameters\n  add(num1, num2);\n\n  return 0;\n}\n')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The void function named ",(0,r.kt)("b",null,"add()")," doesn\u2019t have any return value."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Output:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"5\n")),(0,r.kt)("h2",{id:"quiz"},"Quiz"),(0,r.kt)("iframe",{src:"https://docs.google.com/forms/d/e/1FAIpQLSfFh0ua0YwuMxYCFZGb8-U91HF9GdicJxIIV3EWkI5f4OJI1Q/viewform?embedded=true",width:"100%",height:"500",frameborder:"0",marginheight:"0",marginwidth:"0"},"Loading\u2026"))}h.isMDXComponent=!0}}]);