"use strict";(self.webpackChunkfour=self.webpackChunkfour||[]).push([[3585],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=r.createContext({}),u=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,f=p["".concat(m,".").concat(d)]||p[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5102:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={title:"Algorithms"},m=void 0,u={unversionedId:"programming/algorithm/introduction",id:"programming/algorithm/introduction",title:"Algorithms",description:"An algorithm is the set of instructions in steps to solve a problem.",source:"@site/docs/programming/04-algorithm/introduction.md",sourceDirName:"programming/04-algorithm",slug:"/programming/algorithm/introduction",permalink:"/programming/algorithm/introduction",editUrl:"https://github.com/The-Programming-Foundation/tutorials/edit/4.0/docs/programming/04-algorithm/introduction.md",tags:[],version:"current",frontMatter:{title:"Algorithms"},sidebar:"tutorialSidebar",previous:{title:"Algorithm",permalink:"/programming/algorithm/"},next:{title:"Binaries",permalink:"/logic/binaries"}},s=[{value:"Pseudo-code",id:"pseudo-code",children:[],level:2},{value:"Flowchart",id:"flowchart",children:[],level:2},{value:"Python implementation",id:"python-implementation",children:[],level:2}],c={toc:s};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An algorithm is the set of instructions in steps to solve a problem."),(0,a.kt)("p",null,"In real-life if you had to count the number of members in a room, you would count one by one until you finish counting the last member."),(0,a.kt)("p",null,"So we count a member and add one to the previously counted number, go to the next member, and repeat the same procedure until there are no members in the room. This is a step-wise procedure we use to count the number of members."),(0,a.kt)("p",null,"For a computer to solve a problem or perform a task for us, for example, a counting problem, we give it a sequence of instructions similar to the step-by-step procedure humans follow. An algorithm is a sequence of instructions given to computers to solve problems or perform tasks."),(0,a.kt)("p",null,"An algorithm can be written in a plain language, a pseudo-code or described by a diagram-based flowchart and it can be implemented in different computer programming langugages. "),(0,a.kt)("h2",{id:"pseudo-code"},"Pseudo-code"),(0,a.kt)("p",null,"Pseudo-codes are a simplified version of computer programs and written in natural or human-readable language."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Pseudo-code can be read and followed by programmers to write computer programs."),(0,a.kt)("li",{parentName:"ul"},"Pseudo-code does not have specific syntax and can't be executed by a computer."),(0,a.kt)("li",{parentName:"ul"},"Pseudo-code can be implemented in a specific programming language.")),(0,a.kt)("p",null,"For example, a pseudo-code of counting members in a room can be as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"set total_number_members to zero\nloop while the input of member name is not empty\n    increment total_number_members by one\noutput total_number_members\n")),(0,a.kt)("h2",{id:"flowchart"},"Flowchart"),(0,a.kt)("p",null,"An algorithm can be described as a pictorial representation with different symbols, shapes, arrow that describes the different process. Each shape describes a different process:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The process is represented graphically."),(0,a.kt)("li",{parentName:"ul"},"The process is described block by block with the arrows between blocks indicating the order of workflow."),(0,a.kt)("li",{parentName:"ul"},"The described steps are easy to follow."),(0,a.kt)("li",{parentName:"ul"},"Following the logic in diagram does not require understanding of the code.")),(0,a.kt)("p",null,"For example, a flowchart of counting members is as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"                        .......\n                       / Start \\\n                       \\......./\n                           |\n                           V\n            ---------------------------------\n            |    total_number_members = 0   |\n            ---------------------------------\n                           |\n                           V\n                           *\n                        *     * \n                     *            *          \n                  *                   *\n               *                          *       no\n     ------\x3e *   input name is not empty?    * ------------\n     |         *                          *               |\n     |            *                   *                   |\n     |               *             *                      |\n     |                  *      *                          |\n     |                     *                              |\n     |                     |  yes                         |\n     |                     V                              |\n     |    -------------------------------------------     |\n     ----|   increment total_number_members by one  |     |\n         --------------------------------------------     |\n                                                          |\n                           --------------------------------\n                           |\n                           V\n                -------------------------------------\n               /  output total_number_members       /\n              --------------------------------------\n                           |\n                           V\n                        .......\n                       /  End  \\\n                       \\......./\n")),(0,a.kt)("h2",{id:"python-implementation"},"Python implementation"),(0,a.kt)("p",null,"The above pseudo-code or flowchart can be followed to write a Python code as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Python"},'total_number_members = 0\nwhile input("name? ") != "":\n    total_number_members += 1\nprint(total_number_members)\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'name? "Jack Lee"\nname? "Mary Lo"\nname?\n2\n')))}p.isMDXComponent=!0}}]);