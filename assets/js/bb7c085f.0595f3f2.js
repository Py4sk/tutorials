"use strict";(self.webpackChunkfour=self.webpackChunkfour||[]).push([[1215],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),h=o,d=m["".concat(p,".").concat(h)]||m[h]||s[h]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7487:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return m},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=n(1193),l=n.n(i),p=["components"],u={title:"Structure"},c=void 0,s={unversionedId:"programming/python/structure",id:"programming/python/structure",title:"Structure",description:"<div",source:"@site/docs/programming/02-python/01-structure.mdx",sourceDirName:"programming/02-python",slug:"/programming/python/structure",permalink:"/programming/python/structure",editUrl:"https://github.com/The-Programming-Foundation/tutorials/docs/programming/02-python/01-structure.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Structure"},sidebar:"tutorialSidebar",previous:{title:"Python",permalink:"/programming/python/"},next:{title:"Hello Earth",permalink:"/programming/python/hello-earth"}},m=[{value:"Comment",id:"comment",children:[],level:2},{value:"Python shell",id:"python-shell",children:[],level:2},{value:"File extension",id:"file-extension",children:[],level:2}],h={toc:m};function d(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(l(),{mdxType:"Draggable"},(0,a.kt)("div",{class:"card-demo",style:{position:"relative",zIndex:5}},(0,a.kt)("div",{class:"card",style:{backgroundColor:"#1d9dff",position:"relative",zIndex:5}},(0,a.kt)("iframe",{src:"https://peaceful-bohr-249ea0.netlify.app/images/emulation/python.html",width:"96%",height:"auto"})))),(0,a.kt)("h2",{id:"comment"},"Comment"),(0,a.kt)("p",null,"Comments allow you to describe the code or the logic written for the program. You can have single or multiple lines of comments. To comment in Python, use ",(0,a.kt)("strong",{parentName:"p"},"#"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# This is a comment\n")),(0,a.kt)("p",null,"A multi line comment can be declared using ",(0,a.kt)("strong",{parentName:"p"},"\u201c\u201c\u201c \u201c\u201c\u201c")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'"""\nFirst line\nSecond line\nthird line\n...\n...\n...\n"""\n')),(0,a.kt)("h2",{id:"python-shell"},"Python shell"),(0,a.kt)("p",null,"Similar to Unix shell, Python has a shell prompt ",(0,a.kt)("strong",{parentName:"p"},">>>"),". The prompt takes input and shows the output in the next line."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">>>\n")),(0,a.kt)("p",null,"Here's an example of adding variables using the prompt:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},">>> x = 4 + 1\n>>> y = 2 + 1\n>>> z = x + y\n>>> z\n8\n")),(0,a.kt)("h2",{id:"file-extension"},"File extension"),(0,a.kt)("p",null,"The extension of a python script file is ",(0,a.kt)("strong",{parentName:"p"},".py")),(0,a.kt)("p",null,"Here's the same addition program inside a python script file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"x = 4 + 1\ny = 2 + 1\nz = x + y\n\nprint(z)\n")),(0,a.kt)("p",null,"To run this python script in a Unix shell:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"user@theprogrammingfoundation:~$ python addition.py\nuser@theprogrammingfoundation:~$ 8\n")))}d.isMDXComponent=!0}}]);